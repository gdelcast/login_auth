[{"C:\\XTRA\\Github\\login_auth\\src\\App.tsx":"1","C:\\XTRA\\Github\\login_auth\\src\\pages\\Login.tsx":"2","C:\\XTRA\\Github\\login_auth\\src\\components\\ExploreContainer.tsx":"3","C:\\XTRA\\Github\\login_auth\\src\\serviceWorker.ts":"4","C:\\XTRA\\Github\\login_auth\\src\\pages\\Profile.tsx":"5","C:\\XTRA\\Github\\login_auth\\src\\index.tsx":"6","C:\\XTRA\\Github\\login_auth\\src\\pages\\Home.tsx":"7"},{"size":1417,"mtime":1606176791801,"results":"8","hashOfConfig":"9"},{"size":7237,"mtime":1606960908804,"results":"10","hashOfConfig":"9"},{"size":451,"mtime":1606171668485,"results":"11","hashOfConfig":"9"},{"size":5358,"mtime":1606171668487,"results":"12","hashOfConfig":"9"},{"size":2063,"mtime":1606171668486,"results":"13","hashOfConfig":"9"},{"size":441,"mtime":1606171668485,"results":"14","hashOfConfig":"9"},{"size":680,"mtime":1606171668486,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i43hm4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\XTRA\\Github\\login_auth\\src\\App.tsx",[],"C:\\XTRA\\Github\\login_auth\\src\\pages\\Login.tsx",["31","32"],"C:\\XTRA\\Github\\login_auth\\src\\components\\ExploreContainer.tsx",[],"C:\\XTRA\\Github\\login_auth\\src\\serviceWorker.ts",[],"C:\\XTRA\\Github\\login_auth\\src\\pages\\Profile.tsx",["33","34"],"import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonItemDivider} from '@ionic/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { useHistory, RouteComponentProps } from \"react-router-dom\";\r\nimport { IonGrid, IonRow, IonCol } from '@ionic/react';\r\nimport { IonItem, IonLabel, IonAvatar } from '@ionic/react';\r\n\r\ninterface ResetProps\r\n  extends RouteComponentProps<{\r\n    id: string;\r\n  }> {}\r\n\r\nconst Dashboard: React.FC<ResetProps> = ({ match }) => {\r\n  const history = useHistory();\r\n  const [users, setUsers] = useState<Array<any>>([]);\r\n  useEffect(() => {\r\n    const api = axios.create({\r\n        baseURL: `https://reqres.in/api`\r\n    })\r\n    api.get(\"/users\")\r\n        .then(res => {             \r\n            setUsers(res.data.data)\r\n        })\r\n        .catch(error=>{\r\n            console.log(\"Error fetching data\")\r\n        })\r\n  }, [])\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n  <IonTitle>Dasboard</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n      <IonContent fullscreen className=\"ion-padding ion-text-center\">\r\n        <IonGrid>\r\n          <IonRow>\r\n              <IonCol>\r\n                  <h4>Welcome: {match.params.id}</h4>\r\n                  <IonItemDivider></IonItemDivider>\r\n              </IonCol>\r\n          </IonRow>\r\n          <IonRow>\r\n            <IonCol>\r\n              {users.map((user, i) => {\r\n                return (\r\n                  <IonItem key={i}>\r\n                    <IonAvatar>\r\n                        <img src={user.avatar} />\r\n                    </IonAvatar>\r\n                    <IonLabel>\r\n                        <h2 style={{ paddingLeft: \"10px\" }}>{user.first_name + \" \" + user.last_name} </h2>\r\n                        <p style={{ paddingLeft: \"10px\" }}>{user.email}</p>\r\n                    </IonLabel>\r\n                  </IonItem>\r\n                );\r\n              })}\r\n            </IonCol>\r\n          </IonRow>\r\n        </IonGrid>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\XTRA\\Github\\login_auth\\src\\index.tsx",[],"C:\\XTRA\\Github\\login_auth\\src\\pages\\Home.tsx",[],{"ruleId":"35","severity":1,"message":"36","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":13},{"ruleId":"35","severity":1,"message":"39","line":16,"column":9,"nodeType":"37","messageId":"38","endLine":16,"endColumn":16},{"ruleId":"35","severity":1,"message":"39","line":14,"column":9,"nodeType":"37","messageId":"38","endLine":14,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":49,"column":25,"nodeType":"42","endLine":49,"endColumn":50},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]